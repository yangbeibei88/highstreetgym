{"version":3,"file":"351.bundle.js","mappings":";;;;;;;;;;;;;;;;AAA+C;AAExC,IAAMC,WAAW;EACtB,SAAAA,YAAA,EAAc;IAAAC,eAAA,OAAAD,WAAA;IACZ,IAAI,CAACE,gBAAgB,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;IAChE,IAAI,CAACC,mBAAmB,GAAGF,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IACpE,IAAI,CAACE,MAAM,CAAC,CAAC;EACf;EAAC,OAAAC,YAAA,CAAAP,WAAA;IAAAQ,GAAA;IAAAC,KAAA,EAED,SAAAH,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACJ,gBAAgB,EAAE;QACzB,IAAI,CAACQ,aAAa,GAAG,IAAIX,iEAAW,CAClC,IAAI,CAACG,gBAAgB,EACrB,IAAI,CAACG,mBACP,CAAC;MACH;IACF;EAAC;AAAA;;;;;;;;;;;;;;;;;AChBuB;AAEnB,IAAMN,WAAW;EACtB,SAAAA,YAAYa,QAAQ,EAAEC,aAAa,EAAE;IAAAZ,eAAA,OAAAF,WAAA;IACnC,IAAI,CAACa,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACP,MAAM,GAAG,IAAIK,uDAAK,CAAC,IAAI,CAACC,QAAQ,EAAE;MACrCE,OAAO,EAAE;QACPC,OAAO,EAAE,CACP,CAAC,MAAM,EAAE,QAAQ,CAAC,EAClB,CAAC;UAAEC,IAAI,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM;QAAE,CAAC,CAAC,EAC7C,CAAC;UAAEC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK;QAAE,CAAC,CAAC,EACpC,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC,EACpC,CAAC;UAAEC,IAAI,EAAE;QAAU,CAAC,EAAE;UAAEA,IAAI,EAAE;QAAS,CAAC,CAAC;QACzC;QACA,CAAC,OAAO,CAAC;MAEb,CAAC;MACDC,WAAW,EAAE,oBAAoB;MACjCC,KAAK,EAAE;IACT,CAAC,CAAC;;IAEF;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB;EAAC,OAAAd,YAAA,CAAAR,WAAA;IAAAS,GAAA;IAAAC,KAAA,EAED,SAAAY,UAAUA,CAAA,EAAG;MACX,IAAI,CAACf,MAAM,CAACgB,EAAE,CAAC,aAAa,EAAE,IAAI,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5D;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EAED,SAAAc,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACV,aAAa,CAACJ,KAAK,GAAG,IAAI,CAACH,MAAM,CAACmB,IAAI,CAACC,SAAS;IACvD;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;EAAA;AAAA","sources":["webpack://hsg_frontend/./src/components/ArticleForm.js","webpack://hsg_frontend/./src/components/QuillEditor.js"],"sourcesContent":["import { QuillEditor } from \"./QuillEditor.js\";\n\nexport class ArticleForm {\n  constructor() {\n    this._articleEditorEl = document.getElementById(\"articleEditor\");\n    this._hiddenContentInput = document.getElementById(\"articleContent\");\n    this.editor();\n  }\n\n  editor() {\n    if (this._articleEditorEl) {\n      this.articleEditor = new QuillEditor(\n        this._articleEditorEl,\n        this._hiddenContentInput,\n      );\n    }\n  }\n}\n","import Quill from \"quill\";\n\nexport class QuillEditor {\n  constructor(editorEl, hiddenInputEl) {\n    this.editorEl = editorEl;\n    this.hiddenInputEl = hiddenInputEl;\n    this.editor = new Quill(this.editorEl, {\n      modules: {\n        toolbar: [\n          [\"bold\", \"italic\"],\n          [{ size: [\"small\", false, \"large\", \"huge\"] }],\n          [{ header: [2, 3, 4, 5, 6, false] }],\n          [\"link\", \"blockquote\", \"code-block\"],\n          [{ list: \"ordered\" }, { list: \"bullet\" }],\n          // remove format button\n          [\"clean\"],\n        ],\n      },\n      placeholder: \"Compose an epic...\",\n      theme: \"snow\",\n    });\n\n    // this.editor.getModule(\"toolbar\").addHandler(\"image\", () => {\n    //   this.selectLocalImage();\n    // });\n\n    // If there's initial content (e.g., sanitized HTML), set it in the editor\n    // if (initialContent) {\n    //   this.editor.clipboard.dangerouslyPasteHTML(initialContent);\n    // }\n\n    this.addOnEvent();\n  }\n\n  addOnEvent() {\n    this.editor.on(\"text-change\", this.assignValue.bind(this));\n  }\n\n  assignValue() {\n    this.hiddenInputEl.value = this.editor.root.innerHTML;\n  }\n\n  // selectLocalImage() {\n  //   const input = document.createElement(\"input\");\n  //   input.setAttribute(\"type\", \"file\");\n  //   input.setAttribute(\"accept\", \"image/*\");\n  //   input.click();\n\n  //   input.onchange = () => {\n  //     const file = input.files[0];\n  //     console.log(\"clicked image upload\");\n  //     if (/image\\//.test(file.type)) {\n  //       this.saveToServer(file);\n  //     } else {\n  //       window.alert(\"You can only upload images\");\n  //     }\n  //   };\n  // }\n\n  // // TODO: ADD TO SERVER\n  // async saveToServer(file) {\n  //   const formData = new FormData();\n  //   formData.append(\"image\", file);\n  //   try {\n  //     const res = await fetch(\"/images/blog\", {\n  //       method: \"POST\",\n  //       body: formData,\n  //     });\n\n  //     const data = await res.json();\n  //     if (data && data.url) {\n  //       this.insertToEditor(data.url);\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Failed to upload image\", error);\n  //   }\n  // }\n\n  // insertToEditor(url) {\n  //   const range = this.editor.getSelection();\n  //   this.editor.insertEmbed(range.index, \"image\", url);\n  // }\n}\n"],"names":["QuillEditor","ArticleForm","_classCallCheck","_articleEditorEl","document","getElementById","_hiddenContentInput","editor","_createClass","key","value","articleEditor","Quill","editorEl","hiddenInputEl","modules","toolbar","size","header","list","placeholder","theme","addOnEvent","on","assignValue","bind","root","innerHTML"],"sourceRoot":""}