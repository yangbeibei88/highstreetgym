{"version":3,"file":"src_components_TimetableSearchAndFilter_js.bundle.js","mappings":";;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAGA;AAIA;AAEA;AAIA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA","sources":["webpack://hsg_frontend/./src/components/TimetableSearchAndFilter.js"],"sourcesContent":["import { Pagination } from \"./FnPagination.js\";\nimport { rowHtml } from \"./HTMLTemplate.js\";\n\nexport class TimetableSearchAndFilter {\n  constructor() {\n    this._ttSearchAndFilterEl = document.getElementById(\"ttSearchAndFilter\");\n    this._classFilterEl = document.querySelector(\n      \"#ttSearchAndFilter #classFilter\",\n    );\n    this._fromDateEl = document.querySelector(\"#ttSearchAndFilter #fromDate\");\n    this._toDateEl = document.querySelector(\"#ttSearchAndFilter #toDate\");\n    this._timetableList = document.querySelector(\"table#timetableList tbody\");\n    this._myBookingTimetableIds = [];\n    this._paginationContainer = document.querySelector(\n      \"#pagination-container-timetable\",\n    );\n    this.pagination = null;\n    if (!this._ttSearchAndFilterEl || !this._timetableList) {\n      return;\n    }\n    this.handleSearchFilter();\n    this.initializeListeners();\n  }\n\n  initializeListeners() {\n    this._classFilterEl.addEventListener(\"change\", () =>\n      this.handleSearchFilter(),\n    );\n    this._fromDateEl.addEventListener(\"change\", () =>\n      this.handleSearchFilter(),\n    );\n    this._toDateEl.addEventListener(\"change\", () => this.handleSearchFilter());\n  }\n\n  buildQuery(page = 1, limit = 10) {\n    const classFilter = this._classFilterEl.value;\n    const fromDate = this._fromDateEl.value;\n    const toDate = this._toDateEl.value;\n\n    // eslint-disable-next-line node/no-unsupported-features/node-builtins\n    return new URLSearchParams({\n      classFilter: classFilter || \"\",\n      fromDate: fromDate || \"\",\n      toDate: toDate || \"\",\n      page,\n      limit,\n    }).toString();\n  }\n\n  async fetchTimetables(query) {\n    try {\n      const res = await fetch(`/timetable/search-filter?${query}`);\n      const data = await res.json();\n      this._myBookingTimetableIds = data.myBookingTimetableIds;\n      this.updateTimetableList(data.timetables);\n      // console.log(data.timetables);\n      this.updatePagination(data.pagination);\n    } catch (error) {\n      console.error(`Fetch timetable error: `, error);\n    }\n  }\n\n  handleSearchFilter(page = 1) {\n    const query = this.buildQuery(page);\n    this.fetchTimetables(query);\n  }\n\n  bookingButtonTemplate(timetableId) {\n    const isDisabled = this._myBookingTimetableIds.includes(timetableId);\n    const href = isDisabled\n      ? \"#\"\n      : `/auth/account/timetable/${timetableId}/bookingForm`;\n    const classList = isDisabled\n      ? \"btn-bullet btn-limeGreen btn-sm cursor-not-allowed text-gray-600 saturate-50 hover:no-underline\"\n      : \"btn-bullet btn-limeGreen btn-sm\";\n\n    const buttonText = isDisabled ? \"Booked\" : \"Book Now\";\n\n    const btnUI = `<a href=\"${href}\" class=\"${classList}\">\n        ${buttonText}\n      </a>`;\n\n    return rowHtml(\"action\", btnUI);\n  }\n\n  updateTimetableList(timetables) {\n    this._timetableList.innerHTML = \"\";\n\n    if (timetables.length === 0) {\n      const row = document.createElement(\"tr\");\n      const noDataCell = document.createElement(\"td\");\n      noDataCell.colSpan = 9;\n      noDataCell.textContent = \"No class sessions found.\";\n      row.appendChild(noDataCell);\n      this._timetableList.appendChild(row);\n      return;\n    }\n\n    timetables.forEach((item) => {\n      const row = document.createElement(\"tr\");\n      row.innerHTML = `\n      ${rowHtml(\"date\", new Date(item.startDateTime).toLocaleDateString(\"en-AU\"))}\n      ${rowHtml(\"weekday\", new Date(item.startDateTime).toLocaleDateString(\"en-AU\", { weekday: \"short\" }))}\n      ${rowHtml(\"time\", new Date(item.startDateTime).toLocaleTimeString(\"en-AU\", { timeStyle: \"short\", hour12: false }))}\n      ${rowHtml(\"class\", item.className)}\n      ${rowHtml(\"duration\", item.duration)}\n      ${rowHtml(\"level\", item.level)}\n      ${rowHtml(\"trainer\", item.trainerFirstName)}\n      ${rowHtml(\"availability\", item.availability)}\n      ${this.bookingButtonTemplate(item.timetableId)}\n      `;\n\n      this._timetableList.appendChild(row);\n    });\n  }\n\n  updatePagination(paginationData) {\n    // console.log(\"Fontend Pagination Data:\", paginationData);\n\n    // RE-NITIALIZE PAGINATION EVERYTIME NEW DATA IS FETCHED, OTHERWISE, THE PAGINATION NUMBERS WILL STAY AT THE FIRST TIME!\n    if (this.pagination) {\n      this._paginationContainer.innerHTML = \"\";\n    }\n\n    this.pagination = new Pagination({\n      currentPage: paginationData.currentPage,\n      totalPages: paginationData.totalPages,\n      totalItems: paginationData.totalItems,\n      limit: paginationData.limit,\n      onPageChange: (page) => {\n        this.handleSearchFilter(page);\n      },\n      paginationContainer: \"#pagination-container-timetable\",\n      captionContainer: \"table#timetableList caption\",\n    });\n\n    this.pagination.render();\n  }\n}\n"],"names":[],"sourceRoot":""}