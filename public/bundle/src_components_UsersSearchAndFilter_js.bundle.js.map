{"version":3,"file":"src_components_UsersSearchAndFilter_js.bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAQA;AANA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AAEA;AAmBA;AAyDA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;ACjJA;AAAA;AACA;AAEA;AAAA;AAEA;AAIA;AAAA;AACA;;;;;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAFA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA","sources":["webpack://hsg_frontend/./src/components/FnPagination.js","webpack://hsg_frontend/./src/components/HTMLTemplate.js","webpack://hsg_frontend/./src/components/UsersSearchAndFilter.js"],"sourcesContent":["export class Pagination {\n  constructor({\n    currentPage,\n    totalPages,\n    totalItems,\n    limit,\n    onPageChange,\n    paginationContainer,\n    captionContainer = \"\",\n  }) {\n    // console.log(\"Pagination Constructor:\", {\n    //   currentPage,\n    //   totalPages,\n    //   totalItems,\n    //   limit,\n    // });\n    this.currentPage = currentPage;\n    this.totalPages = totalPages;\n    this.totalItems = totalItems;\n    this.limit = limit;\n    this.onPageChange = onPageChange;\n    this._paginationContainer = document.querySelector(paginationContainer);\n    this._captionContainer = document.querySelector(captionContainer);\n  }\n\n  render() {\n    const startIndex =\n      this.totalItems > 0 ? (this.currentPage - 1) * this.limit + 1 : 0;\n    const endIndex = Math.min(this.currentPage * this.limit, this.totalItems);\n\n    const captionHtml = `\n        <!-- Showing X to Y of Z Entries -->\n      <span class=\"text-sm text-center text-darkCyan\">\n        Showing\n        <span class=\"font-semibold\">\n          ${startIndex}\n        </span>\n        to\n        <span class=\"font-semibold\">\n          ${endIndex}\n        </span>\n        of\n        <span class=\"font-semibold\">\n          ${this.totalItems}\n        </span>\n        Entries\n      </span>\n    `;\n\n    const paginationHtml = `<div class=\"block py-4\">\n    <div class=\"flex flex-col items-center justify-center md:flex-row md:justify-between\">\n    <!-- Showing X to Y of Z Entries -->\n      <span class=\"text-sm text-center text-darkCyan\">\n        Showing\n        <span class=\"font-semibold\">\n          ${startIndex}\n        </span>\n        to\n        <span class=\"font-semibold\">\n          ${endIndex}\n        </span>\n        of\n        <span class=\"font-semibold\">\n          ${this.totalItems}\n        </span>\n        Entries\n      </span>\n  \n      <!-- Pagination Controls -->\n      <nav aria-label=\"page navigation\">\n        <ul class=\"flex flex-wrap items-center -space-x-px h-8 text-sm\">\n          <!-- First Button -->\n          <li>\n            <a href=\"#\" data-page=\"1\" class=\"flex items-center justify-center px-3 h-8 ms-0 leading-tight text-darkCyan bg-white border border-e-0 border-gray-300 rounded-s-lg hover:bg-limeGreen ${this.currentPage === 1 ? \"cursor-not-allowed opacity-50\" : \"\"}\">\n              &laquo;&laquo; First\n            </a>\n          </li>\n  \n          <!-- Previous Button -->\n          <li>\n            <a href=\"#\" data-page=\"${this.currentPage - 1}\" class=\"flex items-center justify-center px-3 h-8 ms-0 leading-tight text-darkCyan bg-white border border-e-0 border-gray-300 hover:bg-limeGreen ${this.currentPage === 1 ? \"cursor-not-allowed opacity-50\" : \"\"}\">\n              &laquo; Prev\n            </a>\n          </li>\n  \n          <!-- Numbered Pages -->\n          ${this.renderPageNumbers()}\n  \n          <!-- Next Button -->\n          <li>\n            <a href=\"#\" data-page=\"${this.currentPage + 1}\" class=\"flex items-center justify-center px-3 h-8 leading-tight text-darkCyan bg-white border border-gray-300 hover:bg-limeGreen ${this.currentPage === this.totalPages || !this.totalPages ? \"cursor-not-allowed opacity-50\" : \"\"}\">\n              Next &raquo;\n            </a>\n          </li>\n  \n          <!-- Last Button -->\n          <li>\n            <a href=\"#\" data-page=\"${this.totalPages}\" class=\"flex items-center justify-center px-3 h-8 leading-tight text-darkCyan bg-white border border-gray-300 rounded-e-lg hover:bg-limeGreen ${this.currentPage === this.totalPages || !this.totalPages ? \"cursor-not-allowed opacity-50\" : \"\"}\">\n              Last &raquo;&raquo;\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div >`;\n\n    this._paginationContainer.innerHTML = paginationHtml;\n    this._captionContainer.innerHTML = captionHtml;\n\n    this.attachListeners();\n  }\n\n  renderPageNumbers() {\n    let pageNumbersHtml = \"\";\n    // eslint-disable-next-line no-plusplus\n    for (let i = 1; i <= this.totalPages; i++) {\n      pageNumbersHtml += `\n        <li>\n          <a href=\"#\" data-page=\"${i}\" class=\"flex items-center justify-center px-3 h-8 leading-tight text-darkCyan border border-gray-300 hover:bg-limeGreen ${this.currentPage === i ? \"bg-limeGreen\" : \"bg-white\"}\">${i}</a>\n        </li>\n      `;\n    }\n\n    return pageNumbersHtml;\n  }\n\n  attachListeners() {\n    const pageLinks =\n      this._paginationContainer.querySelectorAll(\"a[data-page]\");\n\n    pageLinks.forEach((link) => {\n      link.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        const page = parseInt(link.getAttribute(\"data-page\"), 10);\n\n        if (page >= 1 && page <= this.totalPages && page !== this.currentPage) {\n          this.onPageChange(page);\n        }\n      });\n    });\n  }\n\n  update(currentPage) {\n    this.currentPage = currentPage;\n    this.render();\n  }\n}\n","export const rowHtml = (field, value) =>\n  `<td data-cell=${field} class='grid grid-cols-2 before:content-[attr(data-cell)] before:uppercase before:font-semibold md:text-center md:table-cell md:before:content-none'>${value}</td>`;\n\nexport const linkHtml = (text, path) => `\n        <a href=\"${path}\" class=\"text-sm text-darkCyan underline underline-offset-2 decoration-dotted hover:brightness-125 hover:decoration-solid\">\n      ${text}\n    </a>\n    `;\n\nexport const avatarHtml = (path, alt) => `\n  <img class=\"size-10 rounded-full\" src=${path} alt=${alt} />\n`;\n","import { Pagination } from \"./FnPagination.js\";\nimport { avatarHtml, rowHtml } from \"./HTMLTemplate.js\";\n\nexport class UsersSearchAndFilter {\n  constructor() {\n    this._userSearchAndFilterEl = document.querySelector(\"#userFilters\");\n    this._userList = document.querySelector(\"table#userList tbody\");\n    this._manageUsersContainer = document.querySelector(\"main#manage-users\");\n    this._roleFilterEl = document.querySelector(\"#userFilters #roleFilter\");\n    this._searchEl = document.querySelector(\"#userFilters #searchUser\");\n    this._paginationContainer = document.querySelector(\n      \"#pagination-container-users\",\n    );\n    if (!this._userSearchAndFilterEl || !this._userList) {\n      return;\n    }\n    this.currentPage = 1;\n    this.limit = 10;\n    this.pagination = null;\n    this.handleSearchFilter();\n    this.initializeListeners();\n  }\n\n  initializeListeners() {\n    this._roleFilterEl.addEventListener(\"change\", () =>\n      this.handleSearchFilter(),\n    );\n    this._searchEl.addEventListener(\"input\", () => this.handleSearchFilter());\n  }\n\n  getSelectedRoles() {\n    const selectedRoles = [];\n    Array.from(this._roleFilterEl.selectedOptions).forEach((item) =>\n      selectedRoles.push(item.value),\n    );\n    return selectedRoles;\n  }\n\n  getSearchTerm() {\n    return this._searchEl.value;\n  }\n\n  buildQuery(page = this.currentPage, limit = this.limit) {\n    const selectedRoles = this.getSelectedRoles();\n    const searchTerm = this.getSearchTerm();\n    // eslint-disable-next-line node/no-unsupported-features/node-builtins\n    return new URLSearchParams({\n      role: selectedRoles.length > 0 ? selectedRoles.join(\",\") : \"\",\n      search: searchTerm || \"\",\n      page,\n      limit,\n    }).toString();\n  }\n\n  async fetchUsers(query) {\n    try {\n      const res = await fetch(\n        `/auth/admin/manage-users/search-filter?${query}`,\n      );\n      const data = await res.json();\n      // console.log(data);\n      this.updateUserList(data.users);\n      this.updatePagination(data.pagination);\n      this._manageUsersContainer.style.display = \"block\";\n    } catch (error) {\n      console.error(\"fetch users error: \", error);\n    }\n  }\n\n  handleSearchFilter(page = 1) {\n    const query = this.buildQuery(page);\n    this.fetchUsers(query);\n  }\n\n  updateUserList(users) {\n    this._userList.innerHTML = \"\";\n    if (!users.length) {\n      this._userList.textContent = \"No users found\";\n    }\n\n    users.forEach((item) => {\n      const row = document.createElement(\"tr\");\n      row.innerHTML = `\n      ${rowHtml(\"ID#\", item.userId)}\n      ${rowHtml(\"avatar\", avatarHtml(`/images/users/${item.avatar}`, item.firstName))}\n      ${rowHtml(\"user_name\", `${item.firstName} ${item.lastName}`)}\n      ${rowHtml(\"email\", item.emailAddress)}\n      ${rowHtml(\"phone\", item.phoneNumber)}\n      ${rowHtml(\"role\", item.userRole)}\n      ${rowHtml(\"created_at\", new Date(item.createdAt).toLocaleDateString())}\n      `;\n\n      this._userList.appendChild(row);\n    });\n  }\n\n  updatePagination(paginationData) {\n    if (this.pagination) {\n      this._paginationContainer.innerHTML = \"\";\n    }\n\n    const { currentPage, totalPages, totalItems, limit } = paginationData;\n    this.pagination = new Pagination({\n      currentPage,\n      totalPages,\n      totalItems,\n      limit,\n      onPageChange: (page) => {\n        this.handleSearchFilter(page);\n      },\n      paginationContainer: \"#pagination-container-users\",\n      captionContainer: \"table#userList caption\",\n    });\n\n    this.pagination.render();\n  }\n}\n"],"names":[],"sourceRoot":""}